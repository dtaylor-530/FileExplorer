<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:local="clr-namespace:FileExplorer.MVVM"
                  >

    <!--<Style TargetType="{x:Type local:MultiSelectTreeView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MultiSelectTreeView">-->

    <!--<Style x:Key="{x:Type TreeViewItem}"
       TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="local:MultiSelectTreeView.IsItemSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
        <Style.Triggers>
            <Trigger Property="local:MultiSelectTreeView.IsItemSelected" Value="True">
                <Setter Property="Background" Value="SkyBlue" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/FileExplorer.MVVM;component/View/DirectoryDataTemplate.xaml"/>
    
        <ResourceDictionary Source="/FileExplorer.MVVM;component/View/FileDataTemplate.xaml"/>
    </ResourceDictionary.MergedDictionaries>-->

    <!--BasedOn="{StaticResource {x:Type ListBox}}"-->
    <Style x:Key="MultiSelectTreeViewStyle" TargetType="{x:Type local:MultiSelectTreeView}" >
        <!--<Setter Property="SelectionMode" Value="Extended" />-->
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="local:MultiSelectTreeView.IsItemSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Padding" Value="{Binding LevelPadding, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Border x:Name="Bd" CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                    <Border x:Name="Bd2" BorderThickness="1" SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                                            <ContentPresenter Grid.Column="1">
                                                <ContentPresenter.InputBindings>
                                                    <MouseBinding Gesture="LeftDoubleClick" Command="{Binding ToggleExpandCommand, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </ContentPresenter.InputBindings>
                                            </ContentPresenter>
                                        </Grid>
                                    </Border>
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource MouseOverBackground}" />
                                                    <Setter Property="BorderBrush" Value="{StaticResource MouseOverBorder}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                    </Trigger>
                                    <!--<Trigger Property="IsDropTarget" Value="True">
                                        <Setter TargetName="Bd2" Property="Background" Value="{StaticResource MouseOverBackground}" />
                                        <Setter TargetName="Bd2" Property="BorderBrush" Value="{StaticResource MouseOverBorder}" />
                                    </Trigger>-->
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedBackground}" />
                                        <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource SelectedBorder}" />
                                        <Setter TargetName="Bd2" Property="BorderBrush" Value="{StaticResource SelectedInnerBorder}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                        
                                        <Trigger Property="local:MultiSelectTreeView.IsItemSelected" Value="True">
                                            <Setter Property="Background" Value="SkyBlue" />
                                        </Trigger>
                           
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>